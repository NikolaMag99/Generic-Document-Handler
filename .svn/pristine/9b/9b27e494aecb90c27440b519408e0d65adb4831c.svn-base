package actions;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;

import javax.swing.JFileChooser;
import javax.swing.JTree;
import javax.swing.KeyStroke;

import actions.manager.AbstractActionIcon;
import gui.MainFrameGerudok;
import model.Document;
import model.Project;
import model.Workspace;

public class SaveWorkspaceAction extends AbstractActionIcon {
	
	private boolean isWorkspaceCont = false;
	
	public SaveWorkspaceAction(Dimension d) {
		putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_F1, ActionEvent.CTRL_MASK));
		putValue(SMALL_ICON, iconGetter("/toolbar/save.png", d));
		putValue(NAME, ("SaveWs"));

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		
		JFileChooser jfc = new JFileChooser();

		File workspaceFolder = null;
		JTree tree = MainFrameGerudok.getInstance().getTree();
		Object selectedComponent = tree.getLastSelectedPathComponent();

		if (selectedComponent instanceof Workspace) {
			jfc.setDialogTitle("Select folder to save work space");
			jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

			Workspace workSpace = (Workspace) selectedComponent;

			// Biranje fajla u koji se snima projekat
			int choosedOption = jfc.showSaveDialog(MainFrameGerudok.getInstance());
			if (choosedOption != JFileChooser.APPROVE_OPTION) {
				return;
			}
			workspaceFolder = jfc.getSelectedFile();
			File projectFolder = new File(workspaceFolder.getAbsolutePath() + "\\" + workSpace.getName());
			projectFolder.mkdir();
			File workSpaceFile = new File(projectFolder + "\\" + ".WORKSPACE.grws");

			workSpace.setWorkSpaceModified(false);

			// Snimanje projekta u izabrani fajl.
			for (Project pro : workSpace.getProjects()) {
				ObjectOutputStream os;
				try {
					File projectFile = new File(projectFolder + "\\" + pro.getName() + ".grp");
					pro.setProjectFile(workSpaceFile);
					os = new ObjectOutputStream(new FileOutputStream(workSpaceFile));
					os.writeObject(pro);

					os.close();

				} catch (Exception e1) {
					e1.printStackTrace();
				}
			}
			workSpace.setWorkSpaceFile(workSpaceFile);
		}
		
	}
	public boolean isWorkspaceCont() {
		return isWorkspaceCont();
	}

	public void setWorkspaceCont(boolean isWorkspaceCont) {
		this.isWorkspaceCont = isWorkspaceCont;
	}

}
