package view.painters;

import java.awt.Point;
import java.awt.geom.AffineTransform;
import java.awt.geom.GeneralPath;

import model.elements.CircleElement;
import model.elements.Slot;

public class CirclePainter extends Painter {
	
	private CircleElement circle;
	

	public CirclePainter(Slot slotElement) {
		super(slotElement);
		
		circle = (CircleElement) slotElement;
		draw();
	}
	
	
	@Override
	public void draw() {
		shape = new GeneralPath();

		
		((GeneralPath)shape).moveTo(circle.getPosition().getX()+ circle.getDimension().getWidth()/2, circle.getPosition().getY());

		((GeneralPath)shape).quadTo(circle.getPosition().getX()+ circle.getDimension().getWidth(), circle.getPosition().getY(),
				circle.getPosition().getX()+ circle.getDimension().getWidth(), circle.getPosition().getY()+ circle.getDimension().getHeight()/2);

		((GeneralPath)shape).quadTo(circle.getPosition().getX()+ circle.getDimension().getWidth(), circle.getPosition().getY()+ circle.getDimension().getHeight(),
				circle.getPosition().getX()+ circle.getDimension().getWidth()/2, circle.getPosition().getY()+ circle.getDimension().getHeight());

		((GeneralPath)shape).quadTo(circle.getPosition().getX(), circle.getPosition().getY()+ circle.getDimension().getHeight(),
				circle.getPosition().getX(), circle.getPosition().getY()+ circle.getDimension().getHeight()/2);


		((GeneralPath)shape).quadTo(circle.getPosition().getX(), circle.getPosition().getY(),
				circle.getPosition().getX()+ circle.getDimension().getWidth()/2, circle.getPosition().getY());
		
		oldShape = shape;
		
		Point point = new Point(circle.getPosition().x + circle.getDimension().width / 2,
				circle.getPosition().y+ circle.getDimension().height / 2);
		AffineTransform af = AffineTransform.getRotateInstance(circle.getAngle(), point.x, point.y);
		shape = af.createTransformedShape(shape);
	}

}
