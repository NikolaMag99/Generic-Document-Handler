package actions.manager;



import actions.AboutAction;
import actions.CircleAction;
import actions.CloseAction;
import actions.CloseAllAction;
import actions.DeleteNode;
import actions.DisplayProject;
import actions.ImportDocumentAction;
import actions.NewAction;
import actions.NewDocumentAction;
import actions.NewPageAction;
import actions.NewProjectAction;
import actions.OpenProjectAction;
import actions.QuitAction;
import actions.RectangleAction;
import actions.RenameNode;
import actions.ResizeAction;
import actions.SaveAsProjectAction;
import actions.SaveProjectAction;
import actions.SaveWorkspaceAction;
import actions.TriangleAction;

public class ActionManager {

	private AboutAction about;


	private DeleteNode deletenode;
	private DisplayProject displayproject;
	private NewDocumentAction newdocument;
	private NewPageAction newpage;
	private NewProjectAction newproject;
	private OpenProjectAction openproject;
	private RenameNode renamenode;
	private SaveAsProjectAction saveas;
	private SaveProjectAction save;
	private QuitAction quit;
	private CircleAction circleAction;
	private TriangleAction triangleAction;
	private RectangleAction rectangleAction;
	private CloseAction closeAction;
	private CloseAllAction closeAllAction;
	private NewAction newAction;
	private SaveWorkspaceAction saveWsAction;
	private ResizeAction resizeAction;
	


	private ImportDocumentAction importDoc;
	


	private static ActionManager instance = null;

	public ActionManager() {
		about = new AboutAction(AbstractActionIcon.small);
		deletenode = new DeleteNode(AbstractActionIcon.small);
		displayproject = new DisplayProject();
		newdocument = new NewDocumentAction(AbstractActionIcon.small);
		newpage = new NewPageAction(AbstractActionIcon.small);
		newproject = new NewProjectAction(AbstractActionIcon.small);
		openproject = new OpenProjectAction(AbstractActionIcon.small);
		renamenode = new RenameNode();
		saveas = new SaveAsProjectAction(AbstractActionIcon.small);
		save = new SaveProjectAction(AbstractActionIcon.small);
		quit = new QuitAction(AbstractActionIcon.small);
		importDoc = new ImportDocumentAction(AbstractActionIcon.small);
		circleAction = new CircleAction((AbstractActionIcon.small));
		rectangleAction = new RectangleAction((AbstractActionIcon.small));
		triangleAction = new TriangleAction((AbstractActionIcon.small));
		closeAction = new CloseAction((AbstractActionIcon.small));	
		closeAllAction = new CloseAllAction((AbstractActionIcon.small));
		newAction = new NewAction((AbstractActionIcon.small));
		saveWsAction = new SaveWorkspaceAction((AbstractActionIcon.small));
		resizeAction = new ResizeAction();

	}

	public AboutAction getAbout() {
		return about;
	}


	public DeleteNode getDeletenode() {
		return deletenode;
	}

	public DisplayProject getDisplayproject() {
		return displayproject;
	}



	public NewDocumentAction getNewdocument() {
		return newdocument;
	}

	public NewPageAction getNewpage() {
		return newpage;
	}

	public NewProjectAction getNewproject() {
		return newproject;
	}


	public OpenProjectAction getOpenproject() {
		return openproject;
	}

	public RenameNode getRenamenode() {
		return renamenode;
	}

	public SaveAsProjectAction getSaveas() {
		return saveas;
	}

	public SaveProjectAction getSave() {
		return save;
	}


	public QuitAction getQuitaction() {
		return quit;
	}



	public ImportDocumentAction getImportAction() {
		return importDoc;
	}
	




	public static ActionManager getInstance() {
		if (instance == null)
			instance = new ActionManager();

		return instance;
	}

	public CircleAction getCircleAction() {
		return circleAction;
	}

	public void setCircleAction(CircleAction circleAction) {
		this.circleAction = circleAction;
	}

	public TriangleAction getTriangleAction() {
		return triangleAction;
	}

	public void setTriangleAction(TriangleAction triangleAction) {
		this.triangleAction = triangleAction;
	}

	public RectangleAction getRectangleAction() {
		return rectangleAction;
	}

	public void setRectangleAction(RectangleAction rectangleAction) {
		this.rectangleAction = rectangleAction;
	}

	public CloseAction getCloseAction() {
		return closeAction;
	}

	public void setCloseAction(CloseAction closeAction) {
		this.closeAction = closeAction;
	}

	public CloseAllAction getCloseAllAction() {
		return closeAllAction;
	}

	public void setCloseAllAction(CloseAllAction closeAllAction) {
		this.closeAllAction = closeAllAction;
	}

	public NewAction getNewAction() {
		return newAction;
	}

	public void setNewAction(NewAction newAction) {
		this.newAction = newAction;
	}

	public SaveWorkspaceAction getSaveWsAction() {
		return saveWsAction;
	}

	public void setSaveWsAction(SaveWorkspaceAction saveWsAction) {
		this.saveWsAction = saveWsAction;
	}

	public ResizeAction getResizeAction() {
		return resizeAction;
	}

	public void setResizeAction(ResizeAction resizeAction) {
		this.resizeAction = resizeAction;
	}
}
