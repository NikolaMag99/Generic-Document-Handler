package state;

import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.geom.Rectangle2D;

import model.elements.SlotDevice;
import view.PageView;

public class SelectState extends State {

	private PageView page;
	Rectangle2D rect=new Rectangle2D.Double();

	public SelectState(PageView pageView) {
		this.page = pageView;
	}

	@Override
	public void mousePressed(MouseEvent event) {
		
		
	}

	@Override
	public void mouseDragged(MouseEvent event) {
		
		Point mousePos=event.getPoint();
		
		double width=mousePos.getX()-page.getLastPosition().getX();
		double height=mousePos.getY()-page.getLastPosition().getY();
		 if((width<0)&&(height<0)){
	            rect.setRect(mousePos.getX(), mousePos.getY(),Math.abs(width),Math.abs(height));
	        }
	        else if((width<0)&&(height>=0)){
	            rect.setRect(mousePos.getX(), page.getLastPosition().getY(),Math.abs(width),Math.abs(height));
	        }
	        else if((width>0)&&(height<0)){
	            rect.setRect(page.getLastPosition().getX(), mousePos.getY(), Math.abs(width),Math.abs(height));
	        }
	        else{
	            rect.setRect(page.getLastPosition().getX(), page.getLastPosition().getY(),Math.abs(width),Math.abs(height));
	        }
		 page.setRectangle(rect);
		 page.getPage().selectElements(rect);
	    
	       page.repaint();
	

	}

	@Override
	public void mouseReleased(MouseEvent event) {
		page.setRectangle(new Rectangle2D.Double(0,0,0,0));
		page.repaint();
		page.startSelectState();

	}

	@Override
	public void mouseMoved(MouseEvent event) {
		// TODO Auto-generated method stub

	}

}
