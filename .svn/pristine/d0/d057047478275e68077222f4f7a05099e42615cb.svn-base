package model.elements;

import java.awt.Dimension;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Stroke;
import java.io.Serializable;
import java.util.ArrayList;

import javax.swing.event.EventListenerList;

import events.UpdateEvent;
import events.UpdateListener;

public class SlotDevice extends Slot implements Serializable {

	protected double angle;
	protected Dimension dimension;
	protected Point position;
	private ArrayList<Slot> selectionList = new ArrayList<Slot>();
	transient EventListenerList listenerList = new EventListenerList();
	transient UpdateEvent updateEvent = null;

	public SlotDevice(Paint paint, Stroke stroke, Dimension dimension, Point position, double angle) {
		super(paint, stroke);
		this.angle = angle;
		this.dimension = dimension;
		this.position = position;
	}

	public Dimension getDimension() {
		return dimension;
	}

	public void setDimension(Dimension dimension) {
		this.dimension = dimension;
	}

	public Point getPosition() {
		return position;
	}

	public void setPosition(Point position) {
		this.position = position;
	}

	public Double getAngle() {
		return angle;
	}

	public void setAngle(double angle) {
		this.angle = angle;
	}

	public void removeAllFromSelectionList() {
		selectionList.clear();
		fireUpdatePerformed();
	}

	public void fireUpdatePerformed() {
		Object[] listeners = listenerList.getListenerList();
		for (int i = listeners.length - 2; i >= 0; i -= 2) {
			if (listeners[i] == UpdateListener.class) {
				if (updateEvent == null)
					updateEvent = new UpdateEvent(this);
				((UpdateListener) listeners[i + 1]).updatePerformed(updateEvent);
			}
		}
	}

}
